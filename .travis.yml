language: android
os: linux
sudo: required

jdk:
 - oraclejdk8

# Travis' settings will ensure to build PRs and pushed branches. Here we add tagged commits
branches:
  only:
# for building pull requests
    - develop
# for building release tags, formatted as below
    - /v[0-9]+.*/
# for building feature branches
    - /.*/

############
# build set-up for android
android:
  components:
    - tools
    # The BuildTools version used by your project
    - build-tools-28.0.3

    # The SDK version used to compile your project
    - android-28

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    #- sys-img-armeabi-v7a-android-22
    #- sys-img-x86-android-22

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

# for NDK
addons:
  apt:
    packages:
    - libc6:i386
    - unzip

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update

  # Setting up gcloud cli and authenticate
  - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-239.0.0-linux-x86_64.tar.gz
  - tar -xzf google-cloud-sdk-239.0.0-linux-x86_64.tar.gz
  #- ./google-cloud-sdk/bin/gcloud components update
  - openssl aes-256-cbc -K $encrypted_53bab4cf9b0f_key -iv $encrypted_53bab4cf9b0f_iv -in gcloud-travis-service-account.json.enc -out gcloud-travis-service-account.json -d
  - ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=gcloud-travis-service-account.json
  - ./google-cloud-sdk/bin/gcloud config set project cloudtest-761e1

env:
  global:
  - TERM=dumb
  - ANDROID_NDK_HOME=./android-ndk


script:
  # Build apk and test apk
  - ./gradlew :app:assembleDebug :app:assembleAndroidTest --parallel --no-daemon;
  # Run the tests
  # Also, put the output in a log so we can analyze it afterwards
  # Also, do not exit yet if tests fail, we want to post the results to slack
  - ./google-cloud-sdk/bin/gcloud firebase test android run \
    --type instrumentation \
    --app $TRAVIS_BUILD_DIR/app/build/outputs/apk/debug/app-debug.apk \
    --test $TRAVIS_BUILD_DIR/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
    --device model=Pixel2,version=28,locale=en,orientation=portrait > firebase-androidTest-run.log || true

  # print the testing logs afterwards (to not hide it from the log on Travis)
  - cat firebase-androidTest-run.log

  # From the saved output, take everything after the line "Instrumentation testing complete."
  - test_result_table=$(cat firebase-androidTest-run.log | sed -e '1,/Instrumentation testing complete./d')

  # If the table contains "Failed"
  - |
    if [[ $test_result_table == *"Failed"* ]]; then
      echo "androidTest have failed, sending Slack notification"
      curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Firebase TestLab results\nTravis build ${TRAVIS_BRANCH}\n \`\`\`${test_result_table}\`\`\`\"}" https://hooks.slack.com/services/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
      exit 1
    fi

